---
- name: Download Latest iso image 
  block:
  - name: Download Latest ISO image
    uri:
      headers:
        Content-Type: application/json
      user: "{{ rhsm_username }}"
      password: "{{ rhsm_password }}"
      force_basic_auth: true
      url: https://console.redhat.com/api/edge/v1/images?sort_by=-created_at&name={{ image_name }}
      return_content: yes
      body_format: json
    register: latest_iso_image 

  - name: Get Latest ISO IMAGE
    ansible.builtin.debug:
       msg: "{{  latest_iso_image |community.general.json_query('*.data[0].Installer.ImageBuildISOURL') }}"

  - name: Get the ISO URL
    ansible.builtin.set_fact:
      latest_iso_image_url: "{{ latest_iso_image |community.general.json_query('*.data[0].Installer.ImageBuildISOURL') }}"

  - name: Get the CreatedAt by timestamp
    ansible.builtin.set_fact:
      created_at_timestamp: "{{ latest_iso_image |community.general.json_query('*.data[0].Installer.CreatedAt')}}"
    when: latest_iso_image_url | length == 0

  - name: Get Latest ISO IMAGE
    ansible.builtin.debug:
       msg: "Downlaoding {{latest_iso_image_url[0]}} to {{ iso_download_directory }}/{{ image_name }}.iso"
    when: latest_iso_image_url | length == 0


  - name: Get Older ISO IMAGE
    ansible.builtin.debug:
       msg: "Latest iso not found trying {{  latest_iso_image |community.general.json_query('*.data[1].Installer.ImageBuildISOURL') }}"
    when: latest_iso_image_url | length != 0
    
  - name: Get the ISO OLDER URL
    ansible.builtin.set_fact:
      older_iso_image_url: "{{ latest_iso_image |community.general.json_query('*.data[1].Installer.ImageBuildISOURL') }}"
    when: latest_iso_image_url | length != 0

  - name: Get the CreatedAt by timestamp
    ansible.builtin.set_fact:
      created_at_timestamp: "{{ latest_iso_image |community.general.json_query('*.data[1].Installer.CreatedAt')}}"
    when: latest_iso_image_url | length != 0

  - name: Get older ISO IMAGE
    ansible.builtin.debug:
       msg: "Downlaoding {{older_iso_image_url[0]}} to {{ iso_download_directory }}/{{ image_name }}.iso"
    when: latest_iso_image_url | length != 0


  - name: Check the ISO latest URL
    ansible.builtin.set_fact:
      iso_image_url: "{{ latest_iso_image |community.general.json_query('*.data[0].Installer.ImageBuildISOURL') }}"
    when: latest_iso_image_url | length == 0

  - name: Check  the ISO older URL
    ansible.builtin.set_fact:
      iso_image_url: "{{ latest_iso_image |community.general.json_query('*.data[1].Installer.ImageBuildISOURL') }}"
    when: latest_iso_image_url | length != 0

  - name: Download  older ISO
    get_url:
      url: "{{ iso_image_url[0] }}"
      dest: "{{ iso_download_directory }}/{{ image_name  }}.iso"
    delegate_to: localhost

  tags: 
  - download_latest_iso